<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 width="100%" height="100%"
		 creationComplete="onCreate(event)">
	<fx:Script>
		<![CDATA[
			import assets.Drop;
			
			import mx.events.FlexEvent;
			
			public static const NO_DIRECTION:int = 0;
			public static const LEFT:int = 1;
			public static const RIGHT:int = -1;
			
			protected var degrees:Number = 90;
			protected var offset:Number = 30;
			
			private var stageWidth:Number;
			private var stageHeight:Number;
			
			private var _direction:int = 0;
			
			public function get direction():int
			{
				return _direction;
			}
			
			public function set direction(value:int):void
			{
				switch (value)
				{
					default:
						_direction = NO_DIRECTION;
						break;
					case NO_DIRECTION:
					case LEFT:
					case RIGHT:
						_direction = value;
						break;
				}
			}
			
			private function onCreate(event:FlexEvent):void
			{
				stageWidth = this.parentApplication.width;
				stageHeight = this.parentApplication.height;
				
				addEventListener(Event.ENTER_FRAME, onLoop);
			}
			
			private function onLoop(event:Event):void
			{
				var drop:Drop = new Drop();
				drop.x = Math.random() * stageWidth;
				drop.y = -10;
				drop.rotation = degrees + Math.random() * offset * _direction;
				drop.scaleX = drop.scaleY = 0.5 + Math.random();
				drop.addEventListener(Event.ENTER_FRAME, onDropFall);
				
				addElement(drop);
			}
			
			private function onDropFall(event:Event):void
			{
				var drop:Drop = event.currentTarget as Drop;
				drop.x += (50*drop.scaleX)*Math.cos(drop.rotation/180*Math.PI);
				drop.y += (50*drop.scaleX)*Math.sin(drop.rotation/180*Math.PI);
				
				if (drop.y > stageHeight)
				{
					drop.removeEventListener(Event.ENTER_FRAME, onDropFall);
					
					removeElement(drop);
				}
			}
			
		]]>
	</fx:Script>
</s:Group>
